import { toast, ToastOptions } from 'react-hot-toast'
import { IFormErrors } from '@/components/forms/Form/types/Form.types'

// –¢–∏–ø—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
export type NotificationType = 'success' | 'error' | 'warning' | 'info' | 'loading'

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
interface NotificationConfig extends Partial<ToastOptions> {
  title?: string
  description?: string
  icon?: string
}

// –°—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
const TOAST_STYLES = {
  success: {
    background: '#f0fdf4',
    color: '#166534',
    border: '1px solid #bbf7d0',
  },
  error: {
    background: '#fef2f2',
    color: '#991b1b',
    border: '1px solid #fecaca',
  },
  warning: {
    background: '#fefce8',
    color: '#854d0e',
    border: '1px solid #fde68a',
  },
  info: {
    background: '#eff6ff',
    color: '#1e40af',
    border: '1px solid #bfdbfe',
  },
} as const

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const DEFAULT_OPTIONS: ToastOptions = {
  duration: 5000,
  position: 'top-center',
  style: {
    fontSize: '14px',
    maxWidth: '400px',
    padding: '12px 16px',
  },
}

// –ò–∫–æ–Ω–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
const FIELD_ICONS: Record<string, string> = {
  name: 'üë§',
  phone: 'üì±',
  email: 'üìß',
  comment: 'üí¨',
  default: '‚ö†Ô∏è',
}

// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
class NotificationService {
  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
   */
  success(message: string, options?: NotificationConfig): string {
    const { icon = '‚úÖ', ...restOptions } = options || {}
    
    return toast.success(`${icon} ${message}`, {
      ...DEFAULT_OPTIONS,
      duration: 6000,
      ...restOptions,
      style: {
        ...DEFAULT_OPTIONS.style,
        ...TOAST_STYLES.success,
        ...restOptions?.style,
      },
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
   */
  error(message: string, options?: NotificationConfig): string {
    const { icon = '‚ùå', ...restOptions } = options || {}
    
    return toast.error(`${icon} ${message}`, {
      ...DEFAULT_OPTIONS,
      duration: 7000,
      ...restOptions,
      style: {
        ...DEFAULT_OPTIONS.style,
        ...TOAST_STYLES.error,
        ...restOptions?.style,
      },
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
   */
  warning(message: string, options?: NotificationConfig): string {
    const { icon = '‚ö†Ô∏è', ...restOptions } = options || {}
    
    return toast(`${icon} ${message}`, {
      ...DEFAULT_OPTIONS,
      duration: 5000,
      ...restOptions,
      style: {
        ...DEFAULT_OPTIONS.style,
        ...TOAST_STYLES.warning,
        ...restOptions?.style,
      },
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  info(message: string, options?: NotificationConfig): string {
    const { icon = '‚ÑπÔ∏è', ...restOptions } = options || {}
    
    return toast(`${icon} ${message}`, {
      ...DEFAULT_OPTIONS,
      ...restOptions,
      style: {
        ...DEFAULT_OPTIONS.style,
        ...TOAST_STYLES.info,
        ...restOptions?.style,
      },
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É
   */
  loading(message: string, options?: NotificationConfig): string {
    const { icon = '‚è≥', ...restOptions } = options || {}
    
    return toast.loading(`${icon} ${message}`, {
      ...DEFAULT_OPTIONS,
      duration: Infinity,
      ...restOptions,
    })
  }

  /**
   * –û–±–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  update(
    toastId: string,
    type: Exclude<NotificationType, 'loading'>,
    message: string,
    options?: NotificationConfig
  ): void {
    const methods = {
      success: this.success.bind(this),
      error: this.error.bind(this),
      warning: this.warning.bind(this),
      info: this.info.bind(this),
    }

    methods[type](message, { ...options, id: toastId })
  }

  /**
   * –£–±—Ä–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  dismiss(toastId?: string): void {
    toast.dismiss(toastId)
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ñ–æ—Ä–º—ã
   */
  showValidationErrors(errors: IFormErrors): string {
    const errorEntries = Object.entries(errors)
    
    if (errorEntries.length === 0) return ''

    const errorMessages = errorEntries.map(([field, message]) => {
      const icon = FIELD_ICONS[field] || FIELD_ICONS.default
      return `${icon} ${message}`
    })

    return this.error(errorMessages.join('\n'), {
      icon: '',
      duration: 6000,
      style: {
        whiteSpace: 'pre-line',
      },
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã
   */
  showFormSuccess(): string {
    return this.success("–î—è–∫—É—î–º–æ –∑–∞ –∑–∞—è–≤–∫—É!\n–ù–µ–≤–¥–æ–≤–∑—ñ –º–∏ –∑ –≤–∞–º–∏ –∑–≤'—è–∂–µ–º–æ—Å—è", {
      icon: 'üéâ',
      duration: 6000,
      style: {
        fontSize: '16px',
        fontWeight: '600',
        whiteSpace: 'pre-line',
      },
    })
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É —Å–µ—Ç–∏
   */
  showNetworkError(message?: string): string {
    return this.error(
      message || "–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º",
      {
        icon: 'üåê',
        duration: 7000,
      }
    )
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É —Å–µ—Ä–≤–µ—Ä–∞
   */
  showServerError(message?: string): string {
    return this.error(
      message || '–ü—Ä–æ–±–ª–µ–º–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ',
      {
        icon: 'üîß',
        duration: 7000,
      }
    )
  }

  /**
   * –°–æ–∑–¥–∞—Ç—å Promise-based —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
   */
  promise<T>(
    promise: Promise<T>,
    messages: {
      loading: string
      success: string | ((data: T) => string)
      error: string | ((error: Error) => string)
    },
    options?: NotificationConfig
  ): Promise<T> {
    return toast.promise(
      promise,
      {
        loading: messages.loading,
        success: messages.success,
        error: messages.error,
      },
      {
        ...DEFAULT_OPTIONS,
        ...options,
        success: {
          ...DEFAULT_OPTIONS,
          ...options,
          style: {
            ...DEFAULT_OPTIONS.style,
            ...TOAST_STYLES.success,
            ...options?.style,
          },
        },
        error: {
          ...DEFAULT_OPTIONS,
          ...options,
          style: {
            ...DEFAULT_OPTIONS.style,
            ...TOAST_STYLES.error,
            ...options?.style,
          },
        },
      }
    )
  }
}

// –°–æ–∑–¥–∞–µ–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º singleton —ç–∫–∑–µ–º–ø–ª—è—Ä
export const notificationService = new NotificationService()

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∞–∫–∂–µ –∫–ª–∞—Å—Å –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
export { NotificationService }
